{"version":3,"sources":["app/hooks.ts","router/storage.ts","features/api.ts","features/auth/authAPI.ts","features/auth/initialState.ts","features/auth/authSlice.tsx","features/workSpace/workSpaceApi.ts","features/workSpace/workSpaceSlice.tsx","features/workSpace/initialState.ts","pages/signIn/SignIn.tsx","pages/signUp/SignUp.tsx","components/layout/AppLayout.tsx","components/layout/MainLayout.tsx","components/bar/HeaderBar.tsx","components/layout/consts.ts","components/bar/SideBar.tsx","components/layout/PageLayout.tsx","features/dashboard/dashboardAPI.ts","features/dashboard/initialState.ts","features/dashboard/dashboardSlice.tsx","pages/dsshBoard/presenter.tsx","pages/dsshBoard/container.tsx","pages/workSpace/presenter.tsx","pages/workSpace/container.tsx","router/route.tsx","mocks/workSpace/_workSpaceId.ts","app/store.ts","mocks/dashboard/_dashboardId/cardList/_cardListId/cards.ts","mocks/dashboard/_dashboardId/cardList.ts","mocks/auth/user.ts","mocks/auth/sign-up.ts","mocks/auth/sign-in.ts","mocks/setup.ts","mocks/$mock.ts","App.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","ACCESS_TOKEN_KEY","setAccessToken","storage","localStorage","setItem","accessToken","hasAccessToken","Boolean","getItem","Error","getAccessToken","error","client","axios","create","baseURL","timeout","api","request","post","data","get","initialUser","id","name","email","initialState","user","loading","signIn","signUp","signInAsync","createAsyncThunk","thunkApi","a","onSuccess","then","res","workSpaceId","catch","e","rejectWithValue","errorMessage","response","signUpAsync","getUserAsync","authSlice","createSlice","reducers","signOut","state","removeItem","window","location","href","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","authReducer","reducer","actions","getWorkSpaceAsync","createDashboardAsync","workSpaceSlice","workSpace","dashboards","createDashboard","getWorkSpaceId","dashboard","workSpaceReducer","workSpaceAction","theme","createTheme","SignIn","dispatch","useForm","register","handleSubmit","ThemeProvider","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","noValidate","mt","TextField","margin","label","fullWidth","autoComplete","autoFocus","required","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Grid","container","item","xs","to","SignUp","spacing","justifyContent","AppLayout","props","children","mdTheme","height","MainLayout","backgroundColor","palette","mode","grey","flexGrow","overflow","Toolbar","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","HeaderBar","toggle","boardName","useState","anchorEl","setAnchorEl","handleMenuClose","openIconMenu","position","pr","IconButton","edge","aria-label","onClick","marginRight","noWrap","event","currentTarget","Menu","onClose","MenuListProps","MenuItem","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","SideBar","px","Divider","List","PageLayout","setOpen","prev","createTittle","useCallback","tittle","ListItem","button","ListItemIcon","ListItemText","primary","dashboardId","cardListId","cardLists","createCardList","createCard","createCardAsync","createCardLstAsync","dashboardReducer","cardList","targetCardListIndex","findIndex","meta","arg","cards","card","Presenter","Dashboard","m","map","index","AddCardList","reset","Card","minWidth","p","placeholder","CardList","openEditMenu","handleCloseEditMenu","openAddCard","setOpenAddCard","handleOpenAddCard","setTimeout","handleCloseAddCard","overflowWrap","fontSize","fontWeight","ml","console","log","length","CardItem","Container","createUser","useParams","auth","useEffect","Number","AppRouter","basename","process","path","element","PrivateRouter","PublicRouter","store","configureStore","combineReducers","getState","maxId","Math","max","it","setupMock","mockServer","methods","mock0","mock1","mock2","mock3","mock4","mock5","App","setUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b41cf47.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { LocalStorage } from 'types/auth'\n\nconst ACCESS_TOKEN_KEY = 'accessToken'\n\nexport const setAccessToken = (storage: LocalStorage) => {\n  localStorage.setItem(ACCESS_TOKEN_KEY, storage.accessToken)\n}\n\nexport const deleteAccessToken = () => {\n  localStorage.removeItem(ACCESS_TOKEN_KEY)\n}\n\nexport const getAccessToken = () => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_KEY)\n  if (!accessToken) throw Error(`Dont Have ${ACCESS_TOKEN_KEY}`)\n  return accessToken\n}\n\nexport const hasAccessToken = () => {\n  try {\n    return Boolean(getAccessToken())\n  } catch (error) {\n    return false\n  }\n}\n","import axios from 'axios'\n\nconst BACKEND_URL = 'http://localhost:4000'\n\nexport const client = axios.create({\n  baseURL: BACKEND_URL,\n  timeout: 15000,\n})\n","import { client } from 'features/api'\nimport {\n  GetUserResponse,\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  SignUpResponse,\n} from 'types/auth'\n\nexport const api = {\n  signIn: (request: SignInRequest) =>\n    client.post<SignInResponse>('/auth/sign-in/', request.data),\n  signUp: (request: SignUpRequest) =>\n    client.post<SignUpResponse>('/auth/sign-up/', request.data),\n  getUser: () => client.get<GetUserResponse>('/auth/user/'),\n}\n","import { AuthLoading, AuthState } from './state'\nimport { IUser } from 'types/user'\n\nexport const initialUser: IUser = {\n  id: -1,\n  name: '',\n  email: '',\n}\n\nexport const initialLoading: AuthLoading = {\n  post: {\n    signIn: false,\n    signUp: false,\n  },\n}\n\nexport const initialState: AuthState = {\n  user: initialUser,\n  loading: initialLoading,\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { deleteAccessToken, setAccessToken } from 'router/storage'\nimport {\n  GetUserResponse,\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  SignUpResponse,\n} from 'types/auth'\nimport { api } from './authAPI'\nimport { initialState, initialUser } from './initialState'\n\nexport const signInAsync = createAsyncThunk<\n  SignInResponse,\n  { data: SignInRequest; onSuccess: (workSpaceId: number) => void },\n  { rejectValue: { errorMessage: string } }\n>('auth/signIn', async ({ data, onSuccess }, thunkApi) => {\n  const response = await api\n    .signIn(data)\n    .then((res) => {\n      return res.data\n    })\n    .then((data) => {\n      onSuccess(data.workSpaceId)\n      return data\n    })\n    .catch((e) =>\n      thunkApi.rejectWithValue({ errorMessage: 'Auth Error: Sign In' })\n    )\n  return response\n})\n\nexport const signUpAsync = createAsyncThunk<\n  SignUpResponse,\n  { data: SignUpRequest; onSuccess: (workSpaceId: number) => void },\n  { rejectValue: { errorMessage: string } }\n>('auth/signUp', async ({ data, onSuccess }, thunkApi) => {\n  const response = await api\n    .signUp(data)\n    .then((res) => {\n      return res.data\n    })\n    .then((data) => {\n      onSuccess(data.workSpaceId)\n      return data\n    })\n    .catch((e) => {\n      return thunkApi.rejectWithValue({ errorMessage: 'Auth Error: Sign Up' })\n    })\n  return response\n})\n\nexport const getUserAsync = createAsyncThunk<\n  GetUserResponse,\n  { onSuccess: (workSpaceId: number) => void },\n  { rejectValue: { errorMessage: string } }\n>('auth/getUser', async ({ onSuccess }, thunkApi) => {\n  const response = await api\n    .getUser()\n    .then((res) => res.data)\n    .then((data) => {\n      onSuccess(data.workSpaceId)\n      return data\n    })\n    .catch((e) =>\n      thunkApi.rejectWithValue({ errorMessage: 'Auth Error: Sign Up' })\n    )\n  return response\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    signOut: (state) => {\n      state.user = initialUser\n      deleteAccessToken()\n      window.location.href = '/todo-frontend/auth'\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signInAsync.pending, (state) => {\n        state.loading.post.signIn = true\n      })\n      .addCase(signInAsync.fulfilled, (state, action) => {\n        state.loading.post.signIn = false\n        state.user = action.payload.user\n        setAccessToken({ accessToken: action.payload.accessToken })\n      })\n      .addCase(signInAsync.rejected, (state) => {\n        state.loading.post.signIn = false\n      })\n      .addCase(signUpAsync.pending, (state) => {\n        state.loading.post.signUp = true\n      })\n      .addCase(signUpAsync.fulfilled, (state, action) => {\n        state.loading.post.signUp = false\n        state.user = action.payload.user\n        setAccessToken({ accessToken: action.payload.accessToken })\n      })\n      .addCase(signUpAsync.rejected, (state) => {\n        state.loading.post.signUp = false\n      })\n      .addCase(getUserAsync.fulfilled, (state, action) => {\n        state.user = action.payload.user\n      })\n  },\n})\n\nexport const authReducer = authSlice.reducer\nexport const { signOut } = authSlice.actions\n","import { client } from 'features/api'\nimport * as types from 'types/workSpace'\n\nexport const api = {\n  get: (request: types.GetWorkSpaceRequest) =>\n    client.get<types.GetWorkSpaceResponse>(`workSpace/${request.workSpaceId}/`),\n  createDashboard: (request: types.CreateDashboardRequest) =>\n    client.post<types.CreateDashboardResponse>(\n      `workSpace/${request.workSpaceId}/dashboard/`,\n      request.data\n    ),\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport * as types from 'types/workSpace'\nimport { initialState } from './initialState'\nimport { api } from './workSpaceApi'\n\nexport const getWorkSpaceAsync = createAsyncThunk<\n  types.GetWorkSpaceResponse,\n  types.GetWorkSpaceRequest,\n  { rejectValue: { errorMessage: string } }\n>('workSpace/get', async (data, thunkApi) => {\n  const response = api\n    .get(data)\n    .then((res) => res.data)\n    .catch((e) =>\n      thunkApi.rejectWithValue({\n        errorMessage: 'ワークスペースの取得に失敗しました',\n      })\n    )\n  return response\n})\n\nexport const createDashboardAsync = createAsyncThunk<\n  types.CreateDashboardResponse,\n  types.CreateDashboardRequest,\n  { rejectValue: { errorMessage: string } }\n>('workSpace/createDashboard', async (data, thunkApi) => {\n  const response = api\n    .createDashboard(data)\n    .then((res) => res.data)\n    .catch((e) =>\n      thunkApi.rejectWithValue({\n        errorMessage: 'ダッシュボードの作成に失敗しました',\n      })\n    )\n  return response\n})\n\nexport const workSpaceSlice = createSlice({\n  name: 'workSpace',\n  initialState,\n  reducers: {\n    getWorkSpaceId: (state, action: PayloadAction<{ workSpaceId: number }>) => {\n      state.workSpace.id = action.payload.workSpaceId\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getWorkSpaceAsync.fulfilled, (state, action) => {\n        state.workSpace = action.payload.workSpace\n        state.dashboards = action.payload.dashboards\n      })\n      .addCase(createDashboardAsync.pending, (state) => {\n        state.loading.post.createDashboard = true\n      })\n      .addCase(createDashboardAsync.fulfilled, (state, action) => {\n        state.loading.post.createDashboard = false\n        state.dashboards = [...state.dashboards, action.payload.dashboard]\n      })\n      .addCase(createDashboardAsync.rejected, (state) => {\n        state.loading.post.createDashboard = false\n      })\n  },\n})\n\nexport const workSpaceReducer = workSpaceSlice.reducer\n\nexport const workSpaceAction = workSpaceSlice.actions\n","import { IWorkSpaceState } from './state'\n\nexport const initialState: IWorkSpaceState = {\n  workSpace: {\n    id: -1,\n    name: '名称未設定',\n  },\n  dashboards: [],\n  loading: {\n    post: {\n      createDashboard: false,\n    },\n  },\n}\n","import Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport { SignInForm } from 'types/auth'\nimport { useAppDispatch } from 'app/hooks'\nimport { signInAsync } from 'features/auth/authSlice'\nimport { workSpaceAction } from 'features/workSpace/workSpaceSlice'\n\nconst theme = createTheme()\n\nexport const SignIn: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { register, handleSubmit } = useForm<SignInForm>()\n\n  const onSuccess = (workSpaceId: number): void => {\n    dispatch(workSpaceAction.getWorkSpaceId({ workSpaceId }))\n  }\n\n  const onSubmit: SubmitHandler<SignInForm> = (data: SignInForm) =>\n    dispatch(signInAsync({ data: { data }, onSuccess: onSuccess }))\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              label=\"email\"\n              fullWidth\n              autoComplete=\"email\"\n              autoFocus\n              {...register('email', {\n                required: true,\n              })}\n            />\n            <TextField\n              margin=\"normal\"\n              label=\"password\"\n              fullWidth\n              type=\"password\"\n              autoComplete=\"current-password\"\n              {...register('password', {\n                required: true,\n              })}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to=\"#\">Forgot password?</Link>\n              </Grid>\n              <Grid item>\n                <Link to=\"/auth/sign-up/\">Don't have an account? Sign Up</Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","import Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport { SignUpForm } from 'types/auth'\nimport { useAppDispatch } from 'app/hooks'\nimport { signUpAsync } from 'features/auth/authSlice'\nimport { workSpaceAction } from 'features/workSpace/workSpaceSlice'\n\nconst theme = createTheme()\n\nexport const SignUp: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { register, handleSubmit } = useForm<SignUpForm>()\n\n  const onSuccess = (workSpaceId: number): void => {\n    dispatch(workSpaceAction.getWorkSpaceId({ workSpaceId }))\n  }\n  const onSubmit: SubmitHandler<SignUpForm> = (data) =>\n    dispatch(signUpAsync({ data: { data }, onSuccess: onSuccess }))\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"name\"\n                  autoComplete=\"name\"\n                  {...register('name', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"email\"\n                  autoComplete=\"email\"\n                  {...register('email', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  type=\"password\"\n                  label=\"password\"\n                  autoComplete=\"new-password\"\n                  {...register('password', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/auth/sign-in\">Already have an account? Sign in</Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","import { createTheme, ThemeProvider } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport Box from '@mui/material/Box'\n\nexport const AppLayout: React.FC = (props) => {\n  const { children } = props\n\n  const mdTheme = createTheme()\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box height={'100%'} sx={{ display: 'flex' }}>\n        <CssBaseline />\n        {children}\n      </Box>\n    </ThemeProvider>\n  )\n}\n","import Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\n\nexport const MainLayout: React.FC = (props) => {\n  const { children } = props\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'light'\n            ? theme.palette.grey[100]\n            : theme.palette.grey[900],\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n      }}\n    >\n      <Toolbar />\n      {children}\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { Menu, MenuItem } from '@mui/material'\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport Typography from '@mui/material/Typography'\nimport { signOut } from 'features/auth/authSlice'\nimport { DRAWER_WIDTH } from 'components/layout/consts'\nimport { useDispatch } from 'react-redux'\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: DRAWER_WIDTH,\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}))\n\ninterface HeaderBarProps {\n  open: boolean\n  toggle: () => void\n  boardName: string\n}\n\nexport const HeaderBar: React.FC<HeaderBarProps> = (props) => {\n  const { open, toggle, boardName } = props\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  const handleMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const openIconMenu = Boolean(anchorEl)\n\n  const dispatch = useDispatch()\n  const handleSignOut = () => {\n    dispatch(signOut())\n    handleMenuClose()\n  }\n  return (\n    <AppBar position=\"absolute\" open={open}>\n      <Toolbar\n        sx={{\n          pr: '24px', // keep right padding when drawer closed\n        }}\n      >\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={toggle}\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          sx={{ flexGrow: 1 }}\n        >\n          {boardName}\n        </Typography>\n        <IconButton onClick={handleMenuOpen}>\n          <AccountCircleIcon />\n          <ArrowDropDownIcon />\n        </IconButton>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={openIconMenu}\n          onClose={handleMenuClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n        >\n          <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n          <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n          <MenuItem onClick={handleSignOut}>Logout</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","export const DRAWER_WIDTH = 240\n","import { styled } from '@mui/material/styles'\nimport MuiDrawer, { DrawerProps as MuiDrawerProps } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\nimport { DRAWER_WIDTH } from 'components/layout/consts'\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<MuiDrawerProps>(({ theme, open }) => ({\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DRAWER_WIDTH,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: 'border-box',\n    ...(!open && {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}))\n\ninterface SideBarProps {\n  open: boolean\n  toggle: () => void\n}\n\nexport const SideBar: React.FC<SideBarProps> = (props) => {\n  const { open, toggle, children } = props\n\n  return (\n    <Drawer variant=\"permanent\" open={open}>\n      <Toolbar\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          px: [1],\n        }}\n      >\n        <IconButton onClick={toggle}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </Toolbar>\n      <Divider />\n      <List>{children}</List>\n    </Drawer>\n  )\n}\n","import { useState, useCallback } from 'react'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport DashboardIcon from '@mui/icons-material/Dashboard'\nimport PeopleIcon from '@mui/icons-material/People'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport { AppLayout, MainLayout } from 'components/layout'\nimport { HeaderBar, SideBar } from 'components/bar'\nimport { useAppSelector } from 'app/hooks'\n\nexport const PageLayout: React.FC = (props) => {\n  const { children } = props\n\n  const workSpace = useAppSelector((state) => state.workSpace.workSpace)\n  const dashboard = useAppSelector((state) => state.dashboard.dashboard)\n  const [open, setOpen] = useState(false)\n  const toggle = () => setOpen((prev) => !prev)\n\n  const createTittle = useCallback(() => {\n    if (!workSpace.name) return ''\n\n    if (!dashboard.tittle) return workSpace.name\n\n    return `${workSpace.name} > ${dashboard.tittle}`\n  }, [workSpace, dashboard])\n\n  return (\n    <AppLayout>\n      <HeaderBar open={open} toggle={toggle} boardName={createTittle()} />\n      <SideBar open={open} toggle={toggle}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Members\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </SideBar>\n      <MainLayout>{children}</MainLayout>\n    </AppLayout>\n  )\n}\n","import { client } from 'features/api'\nimport {\n  CreateCardListRequest,\n  CreateCardListResponse,\n  CreateCardRequest,\n  CreateCardResponse,\n} from 'types/card'\n\nexport const api = {\n  createCardLst: (request: CreateCardListRequest) =>\n    client.post<CreateCardListResponse>(\n      `/dashboard/${request.dashboardId}/cardList/`,\n      request.data\n    ),\n  createCard: (request: CreateCardRequest) =>\n    client.post<CreateCardResponse>(\n      `/dashboard/${request.dashboardId}/cardList/${request.cardListId}/cards/`,\n      request.data\n    ),\n}\n","import { DashboardLoading, DashboardState } from './state'\nimport { IDashboard } from 'types/card'\n\nconst initialDashboardState: IDashboard = {\n  id: -1,\n  tittle: '',\n  cardLists: [],\n}\n\nconst initialLoading: DashboardLoading = {\n  post: {\n    create: false,\n    createCardList: false,\n    createCard: false,\n  },\n}\n\nexport const initialState: DashboardState = {\n  dashboard: initialDashboardState,\n  loading: initialLoading,\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport * as types from 'types/card'\nimport { api } from './dashboardAPI'\nimport { initialState } from './initialState'\n\nexport const createCardAsync = createAsyncThunk<\n  types.CreateCardResponse,\n  types.CreateCardRequest,\n  { rejectValue: { errorMessage: string } }\n>('dashboard/createCard', async (data, thunkApi) => {\n  const response = await api\n    .createCard(data)\n    .then((res) => res.data)\n    .catch((e) => {\n      return thunkApi.rejectWithValue({\n        errorMessage: 'カードの作成に失敗しました',\n      })\n    })\n  return response\n})\n\nexport const createCardLstAsync = createAsyncThunk<\n  types.CreateCardListResponse,\n  types.CreateCardListRequest,\n  { rejectValue: { errorMessage: string } }\n>('dashboard/createCardList', async (data, thunkApi) => {\n  const response = await api\n    .createCardLst(data)\n    .then((res) => res.data)\n    .catch((e) => {\n      return thunkApi.rejectWithValue({\n        errorMessage: 'カードリストの作成に失敗しました',\n      })\n    })\n  return response\n})\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(createCardLstAsync.pending, (state) => {\n        state.loading.post.createCardList = true\n      })\n      .addCase(createCardLstAsync.fulfilled, (state, action) => {\n        state.loading.post.createCardList = false\n        state.dashboard.cardLists = [\n          ...state.dashboard.cardLists,\n          action.payload.cardList,\n        ]\n      })\n      .addCase(createCardLstAsync.rejected, (state) => {\n        state.loading.post.createCardList = false\n      })\n      .addCase(createCardAsync.pending, (state) => {\n        state.loading.post.createCard = true\n      })\n      .addCase(createCardAsync.fulfilled, (state, action) => {\n        state.loading.post.createCard = false\n        const targetCardListIndex = state.dashboard.cardLists.findIndex(\n          (cardList) => cardList.id === action.meta.arg.cardListId\n        )\n        state.dashboard.cardLists[targetCardListIndex].cards = [\n          ...state.dashboard.cardLists[targetCardListIndex].cards,\n          action.payload.card,\n        ]\n      })\n      .addCase(createCardAsync.rejected, (state) => {\n        state.loading.post.createCard = false\n      })\n  },\n})\n\nexport const dashboardReducer = dashboardSlice.reducer\n","import { useState } from 'react'\nimport { PageLayout } from 'components/layout'\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { Card } from '@mui/material'\nimport EditIcon from '@mui/icons-material/Edit'\nimport CloseIcon from '@mui/icons-material/Close'\nimport {\n  createCardLstAsync,\n  createCardAsync,\n} from 'features/dashboard/dashboardSlice'\nimport { CreateCardListForm, ICard, ICardList, IDashboard } from 'types/card'\nimport { useAppDispatch } from 'app/hooks'\n\nconst CARD_LIST_WIDTH = 360\n\ntype PresenterProps = {\n  dashboard: IDashboard\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props) => {\n  const { dashboard } = props\n\n  return (\n    <PageLayout>\n      <Dashboard cardLists={dashboard.cardLists} />\n    </PageLayout>\n  )\n}\n\ntype DashboardProps = {\n  cardLists: ICardList[]\n}\n\nconst Dashboard: React.FC<DashboardProps> = (props) => {\n  const { cardLists } = props\n\n  return (\n    <Box\n      overflow=\"auto\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        m: 4,\n        height: 640,\n      }}\n    >\n      {cardLists.map((cardList, index) => (\n        <CardList\n          key={`cardList-${index}`}\n          name={cardList.tittle}\n          cardListId={cardList.id}\n          cards={cardList.cards}\n        />\n      ))}\n      <AddCardList />\n    </Box>\n  )\n}\n\nconst AddCardList: React.VFC = (props) => {\n  const { register, reset, handleSubmit } = useForm<{ tittle: string }>()\n  const [open, setOpen] = useState(false)\n  const openForm = () => {\n    // 上位のDOMでcloseのonClockが反応してしまうため、ifで判定\n    if (!open) setOpen(true)\n  }\n  const closeForm = () => {\n    setOpen(false)\n    reset()\n  }\n  const dispatch = useAppDispatch()\n  const onSubmit: SubmitHandler<CreateCardListForm> = (data) => {\n    dispatch(createCardLstAsync({ dashboardId: 1, data: data }))\n    setOpen(false)\n    reset()\n  }\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n      sx={{ display: 'block' }}\n    >\n      <Card\n        sx={{\n          minWidth: CARD_LIST_WIDTH,\n          m: 2,\n          p: 2,\n          backgroundColor: '#ffffff3d',\n        }}\n        onClick={openForm}\n      >\n        リストを追加\n        {open && (\n          <>\n            <TextField\n              margin=\"normal\"\n              placeholder=\"リストのタイトルを入力...\"\n              sx={{ maxWidth: 320 }}\n              fullWidth\n              autoFocus\n              {...register('tittle')}\n            />\n            <IconButton onClick={closeForm}>\n              <CloseIcon />\n            </IconButton>\n          </>\n        )}\n      </Card>\n    </Box>\n  )\n}\n\ntype CardListProps = {\n  name: string\n  cardListId: number\n  cards: ICard[]\n}\n\nconst CardList: React.FC<CardListProps> = (props) => {\n  const { name, cardListId, cards } = props\n\n  // メニュー\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const openEditMenu = Boolean(anchorEl)\n  const handleOpenEditMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleCloseEditMenu = () => {\n    setAnchorEl(null)\n  }\n\n  // カード追加\n  const [openAddCard, setOpenAddCard] = useState(false)\n  const handleOpenAddCard = () => {\n    if (openEditMenu) handleCloseEditMenu()\n    // HACK: useStateが非同期処理で、autoFocusが効かないため\n    setTimeout(() => setOpenAddCard(true))\n  }\n  const handleCloseAddCard = () => {\n    setOpenAddCard(false)\n    reset()\n  }\n\n  const { register, reset, handleSubmit } = useForm<{ tittle: string }>()\n\n  const dispatch = useAppDispatch()\n  const onSubmit: SubmitHandler<{ tittle: string }> = (data) => {\n    dispatch(\n      createCardAsync({ dashboardId: 1, cardListId: cardListId, data: data })\n    )\n    handleCloseAddCard()\n  }\n\n  const editName = () => {\n    console.log('TODO: edit Name')\n  }\n  const deleteCardList = () => {\n    console.log('TODO: delete')\n  }\n\n  return (\n    <Box\n      sx={{\n        minWidth: CARD_LIST_WIDTH,\n        display: 'block',\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{\n          display: 'flex',\n          alignItems: 'flex-start',\n          flexDirection: 'column',\n          backgroundColor: '#ebecf0',\n          p: 2,\n          m: 2,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n          }}\n        >\n          <Typography\n            sx={{\n              width: 240,\n              overflowWrap: 'break-word',\n              fontSize: 20,\n              fontWeight: 600,\n            }}\n          >\n            {name}\n          </Typography>\n          <IconButton sx={{ height: 40, ml: 2 }} onClick={handleOpenEditMenu}>\n            <EditIcon />\n          </IconButton>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openEditMenu}\n            onClose={handleCloseEditMenu}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={editName}>編集</MenuItem>\n            <MenuItem onClick={handleOpenAddCard}>カードを追加</MenuItem>\n            <MenuItem onClick={deleteCardList}>削除</MenuItem>\n          </Menu>\n        </Box>\n        {cards.length >= 1 &&\n          cards.map((card, index) => (\n            <CardItem key={`card-${index}`} card={card} />\n          ))}\n        {openAddCard ? (\n          <>\n            <TextField\n              margin=\"normal\"\n              placeholder=\"タイトルを入力...\"\n              fullWidth\n              autoFocus\n              {...register('tittle')}\n            />\n            <IconButton onClick={handleCloseAddCard}>\n              <CloseIcon />\n            </IconButton>\n          </>\n        ) : (\n          <Button sx={{ mt: 2 }} variant=\"outlined\" onClick={handleOpenAddCard}>\n            カードを追加\n          </Button>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\ntype CardItemProps = {\n  card: ICard\n}\n\nconst CardItem: React.FC<CardItemProps> = (props) => {\n  const { card } = props\n  return (\n    <Card\n      sx={{\n        mt: 2,\n        p: 2,\n        display: 'block',\n        width: 296, // HACK: 100%指定できないから、固定値で指定\n        fontSize: 16,\n        fontWeight: 600,\n        overflowWrap: 'break-word',\n      }}\n    >\n      {card.tittle}\n    </Card>\n  )\n}\n","import { useAppSelector } from 'app/hooks'\nimport { Presenter } from './presenter'\n\nexport const Container: React.FC = () => {\n  const dashboard = useAppSelector((state) => state.dashboard.dashboard)\n\n  return <Presenter dashboard={dashboard} />\n}\n","import { PageLayout } from 'components/layout'\nimport { createDashboardAsync } from 'features/workSpace/workSpaceSlice'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { IDashboard } from 'types/card'\nimport { IUser } from 'types/user'\nimport { IWorkSpace } from 'types/workSpace'\n\ntype Props = {\n  user: IUser\n  workSpace: IWorkSpace\n  dashboards: IDashboard[]\n}\n\nexport const Presenter: React.FC<Props> = (props) => {\n  const { user, workSpace, dashboards } = props\n  const dispatch = useDispatch()\n\n  const onClick = () => {\n    dispatch(\n      createDashboardAsync({\n        workSpaceId: workSpace.id,\n        data: { tittle: 'hogehoge', createUser: user },\n      })\n    )\n  }\n\n  return (\n    <PageLayout>\n      ボード一覧\n      <div>\n        {dashboards.map((dashboard) => (\n          <Link key={`${dashboard.id}`} to={`dashboards/${dashboard.id}`}>\n            {dashboard.tittle}\n          </Link>\n        ))}\n        <div onClick={onClick}>新規作成</div>\n      </div>\n    </PageLayout>\n  )\n}\n","import { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\nimport { getWorkSpaceAsync } from 'features/workSpace/workSpaceSlice'\nimport { Presenter } from './presenter'\nimport { useParams } from 'react-router'\n\nexport const Container: React.FC = () => {\n  const dispatch = useAppDispatch()\n\n  const { workSpaceId } = useParams()\n  const user = useAppSelector((state) => state.auth.user)\n\n  useEffect(() => {\n    if (workSpaceId)\n      dispatch(getWorkSpaceAsync({ workSpaceId: Number(workSpaceId) }))\n  }, [dispatch, workSpaceId])\n\n  const workSpace = useAppSelector((state) => state.workSpace.workSpace)\n  const dashboards = useAppSelector((state) => state.workSpace.dashboards)\n\n  return <Presenter user={user} workSpace={workSpace} dashboards={dashboards} />\n}\n","import {\n  Route,\n  Routes,\n  BrowserRouter,\n  Navigate,\n  Outlet,\n} from 'react-router-dom'\nimport { SignIn } from 'pages/signIn'\nimport { SignUp } from 'pages/signUp/SignUp'\nimport { DashBoard } from 'pages/dsshBoard'\nimport { WorkSpace } from 'pages/workSpace'\nimport { hasAccessToken } from './storage'\nimport { useAppSelector } from 'app/hooks'\n\nexport const AppRouter: React.VFC = () => {\n  const user = useAppSelector((state) => state.auth.user)\n  const workSpaceId = useAppSelector((state) => state.workSpace.workSpace.id)\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<PrivateRouter />}>\n          <Route path=\"workspace/:workSpaceId\" element={<WorkSpace />} />\n          <Route\n            path=\"workspace/:workSpaceId/dashboards/:id\"\n            element={<DashBoard />}\n          />\n          <Route\n            path=\"\"\n            element={<Navigate to={`workspace/${workSpaceId}`} />}\n          />\n        </Route>\n        <Route path=\"auth\" element={<PublicRouter />}>\n          <Route path=\"sign-in\" element={<SignIn />} />\n          <Route path=\"sign-up\" element={<SignUp />} />\n          <Route path=\"\" element={<Navigate to=\"sign-in\" />} />\n        </Route>\n        <Route path=\"*\" element={<Navigate to=\"auth\" />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nconst PrivateRouter: React.FC = () => {\n  const hasToken = hasAccessToken()\n\n  return hasToken ? <Outlet /> : <Navigate to=\"auth\" />\n}\n\nconst PublicRouter: React.FC = () => {\n  const hasToken = hasAccessToken()\n\n  return hasToken ? <Navigate to=\"/\" /> : <Outlet />\n}\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { GetWorkSpaceResponse } from 'types/workSpace'\n\nconst signIn: MockMethods = {\n  get: async (request): Promise<MockResponse> => {\n    const response: GetWorkSpaceResponse = {\n      workSpace: {\n        id: 1,\n        name: 'テスト太郎',\n      },\n      dashboards: [\n        {\n          id: 1,\n          tittle: 'TODO',\n          cardLists: [],\n        },\n      ],\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import {\n  configureStore,\n  combineReducers,\n  ThunkAction,\n  Action,\n} from '@reduxjs/toolkit'\nimport { authReducer } from 'features/auth/authSlice'\nimport { dashboardReducer } from 'features/dashboard/dashboardSlice'\nimport { workSpaceReducer } from 'features/workSpace/workSpaceSlice'\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    auth: authReducer,\n    dashboard: dashboardReducer,\n    workSpace: workSpaceReducer,\n  }),\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { store } from 'app/store'\nimport { MockMethods, MockResponse } from 'axios-mock-server'\nimport * as types from 'types/card'\n\nconst createCardList: MockMethods = {\n  post: async (request): Promise<MockResponse> => {\n    const cardLists = store.getState().dashboard.dashboard.cardLists\n\n    // cardListsの中でIDの最大値のリストを作成し、さらにその中から最大値を取得する\n    const maxId =\n      cardLists.length >= 1\n        ? Math.max(\n            ...cardLists.map((cardList) => {\n              return cardList.cards.length >= 1\n                ? Math.max(...cardList.cards.map((it) => it.id))\n                : 0\n            })\n          )\n        : 0\n\n    const response: types.CreateCardResponse = {\n      card: {\n        id: maxId + 1,\n        tittle: request.data.tittle,\n      },\n    }\n    return [200, response]\n  },\n}\n\nexport default createCardList\n","import { store } from 'app/store'\nimport { MockMethods, MockResponse } from 'axios-mock-server'\nimport * as types from 'types/card'\n\nconst createCardList: MockMethods = {\n  post: async (request): Promise<MockResponse> => {\n    const cardLists = store.getState().dashboard.dashboard.cardLists\n    const maxId =\n      cardLists.length >= 1 ? Math.max(...cardLists.map((it) => it.id)) : 0\n    const response: types.CreateCardListResponse = {\n      cardList: {\n        id: maxId + 1,\n        tittle: request.data.tittle,\n        cards: [],\n      },\n    }\n    return [200, response]\n  },\n}\n\nexport default createCardList\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { GetUserResponse } from 'types/auth'\n\nconst signIn: MockMethods = {\n  get: async (): Promise<MockResponse> => {\n    const response: GetUserResponse = {\n      user: {\n        id: 1,\n        name: 'テスト太郎',\n        email: 'hogehoge@example.com',\n      },\n      workSpaceId: 1,\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { SignUpRequest, SignUpResponse } from 'types/auth'\n\nconst signIn: MockMethods = {\n  post: async (request: SignUpRequest): Promise<MockResponse> => {\n    const response: SignUpResponse = {\n      user: {\n        id: 1,\n        name: request.data.name,\n        email: request.data.email,\n      },\n      accessToken: 'hogehoge',\n      workSpaceId: 1,\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { SignInRequest, SignInResponse } from 'types/auth'\n\nconst signIn: MockMethods = {\n  post: async (request: SignInRequest): Promise<MockResponse> => {\n    const response: SignInResponse = {\n      user: {\n        id: 1,\n        name: 'テスト太郎',\n        email: request.data.email,\n      },\n      accessToken: 'hogehoge',\n      workSpaceId: 1,\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import mock from 'mocks/$mock'\nimport { client } from 'features/api'\n\nexport const setupMock = () => {\n  const mocked = process.env.REACT_APP_MOCKED\n  if (mocked === 'true') mock(client)\n}\n","/* eslint-disable */\nimport { AxiosInstance } from 'axios'\nimport mockServer from 'axios-mock-server'\nimport mock0 from './workSpace/_workSpaceId'\nimport mock1 from './dashboard/_dashboardId/cardList/_cardListId/cards'\nimport mock2 from './dashboard/_dashboardId/cardList'\nimport mock3 from './auth/user'\nimport mock4 from './auth/sign-up'\nimport mock5 from './auth/sign-in'\n\nexport default (client?: AxiosInstance) => mockServer([\n  {\n    path: '/workSpace/_workSpaceId',\n    methods: mock0\n  },\n  {\n    path: '/dashboard/_dashboardId/cardList/_cardListId/cards',\n    methods: mock1\n  },\n  {\n    path: '/dashboard/_dashboardId/cardList',\n    methods: mock2\n  },\n  {\n    path: '/auth/user',\n    methods: mock3\n  },\n  {\n    path: '/auth/sign-up',\n    methods: mock4\n  },\n  {\n    path: '/auth/sign-in',\n    methods: mock5\n  }\n], client, '')\n","import { AppRouter } from 'router'\nimport { setupMock } from 'mocks/setup'\n\nexport const App: React.FC = () => {\n  setUp()\n  return <AppRouter />\n}\n\nconst setUp = () => {\n  setupMock()\n}\n","import { StrictMode } from 'react'\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport { store } from './app/store'\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}