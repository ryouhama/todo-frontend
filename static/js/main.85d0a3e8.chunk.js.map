{"version":3,"sources":["mocks/$mock.ts","app/hooks.ts","router/storage.ts","mocks/auth/sign-up.ts","mocks/auth/sign-in.ts","features/api.ts","features/auth/authAPI.ts","features/auth/initial.ts","features/auth/authSlice.tsx","pages/signIn/SignIn.tsx","pages/signUp/SignUp.tsx","components/layout/AppLayout.tsx","components/layout/MainLayout.tsx","components/bar/HeaderBar.tsx","components/bar/SideBar.tsx","pages/dsshBoad/presenter.tsx","pages/dsshBoad/container.tsx","router/route.tsx","App.tsx","app/store.ts","index.tsx"],"names":["client","useAppDispatch","useDispatch","useSelector","setAccessToken","storage","localStorage","setItem","accessToken","hasAccessToken","Boolean","getItem","Error","getAccessToken","error","signIn","post","request","a","response","user","id","name","data","email","axios","create","baseURL","timeout","mockServer","path","methods","mock0","mock1","api","initialState","loading","signUp","signInAsync","createAsyncThunk","thunkApi","then","res","catch","e","rejectWithValue","errorMessage","signUpAsync","authSlice","createSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","console","log","theme","createTheme","SignIn","dispatch","useForm","register","handleSubmit","ThemeProvider","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","noValidate","mt","TextField","margin","label","fullWidth","autoComplete","autoFocus","required","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Grid","container","item","xs","to","SignUp","spacing","justifyContent","AppLayout","props","children","mdTheme","height","MainLayout","backgroundColor","palette","mode","grey","flexGrow","overflow","Toolbar","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","drawerWidth","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","HeaderBar","toggle","boardName","position","pr","IconButton","edge","aria-label","onClick","marginRight","noWrap","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","SideBar","px","Divider","List","Presenter","useState","setOpen","ListItem","button","ListItemIcon","ListItemText","primary","Container","AppRouter","hasToken","basename","process","element","App","store","configureStore","reducer","auth","authReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85d0a3e8.chunk.js","sourcesContent":["/* eslint-disable */\nimport { AxiosInstance } from 'axios'\nimport mockServer from 'axios-mock-server'\nimport mock0 from './auth/sign-up'\nimport mock1 from './auth/sign-in'\n\nexport default (client?: AxiosInstance) => mockServer([\n  {\n    path: '/auth/sign-up',\n    methods: mock0\n  },\n  {\n    path: '/auth/sign-in',\n    methods: mock1\n  }\n], client, '')\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { LocalStorage } from 'types/auth'\n\nexport const setAccessToken = (storage: LocalStorage) => {\n  localStorage.setItem('accessToken', storage.accessToken)\n}\n\nexport const getAccessToken = () => {\n  const accessToken = localStorage.getItem('accessToken')\n  if (!accessToken) throw Error('Dont Have Access Token')\n  return accessToken\n}\n\nexport const hasAccessToken = () => {\n  try {\n    return Boolean(getAccessToken())\n  } catch (error) {\n    return false\n  }\n}\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { SignUpRequest, SignUpResponse } from 'types/auth'\n\nconst signIn: MockMethods = {\n  post: async (request: SignUpRequest): Promise<MockResponse> => {\n    const response: SignUpResponse = {\n      user: {\n        id: 1,\n        name: request.data.name,\n        email: request.data.email,\n      },\n      accessToken: 'hogehoge',\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import { MockMethods, MockResponse } from 'axios-mock-server'\nimport { SignInRequest, SignInResponse } from 'types/auth'\n\nconst signIn: MockMethods = {\n  post: async (request: SignInRequest): Promise<MockResponse> => {\n    const response: SignInResponse = {\n      user: {\n        id: 1,\n        name: 'テスト太郎',\n        email: request.data.email,\n      },\n      accessToken: 'hogehoge',\n    }\n    return [200, response]\n  },\n}\n\nexport default signIn\n","import axios from 'axios'\nimport mock from '../mocks/$mock'\n\nconst mocked = process.env.REACT_APP_MOCKED\n\nconst API_URL = 'http://localhost:4000'\n\nconst client = axios.create({\n  baseURL: API_URL,\n  timeout: 15000,\n})\n\nif (mocked === 'true') mock(client)\n\nexport { client }\n","import { client } from 'features/api'\nimport {\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  SignUpResponse,\n} from 'types/auth'\n\nexport const api = {\n  signIn: (request: SignInRequest) =>\n    client.post<SignInResponse>('/auth/sign-in/', request.data),\n  signUp: (request: SignUpRequest) =>\n    client.post<SignUpResponse>('/auth/sign-up/', request.data),\n}\n","import { AuthLoading, AuthState } from './state'\nimport { User } from 'types/user'\n\nexport const initialUser: User = {\n  id: -1,\n  name: '',\n  email: '',\n}\n\nexport const initialLoading: AuthLoading = {\n  post: {\n    signIn: false,\n    signUp: false,\n  },\n}\n\nexport const initialState: AuthState = {\n  user: initialUser,\n  loading: initialLoading,\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { setAccessToken } from 'router/storage'\nimport {\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  SignUpResponse,\n} from 'types/auth'\nimport { api } from './authAPI'\nimport { initialState } from './initial'\n\nexport const signInAsync = createAsyncThunk<\n  SignInResponse,\n  SignInRequest,\n  { rejectValue: { errorMessage: string } }\n>('auth/signIn', async (data, thunkApi) => {\n  const response = await api\n    .signIn(data)\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => {\n      return thunkApi.rejectWithValue({ errorMessage: 'Auth Error: Sign In' })\n    })\n  return response\n})\n\nexport const signUpAsync = createAsyncThunk<\n  SignUpResponse,\n  SignUpRequest,\n  { rejectValue: { errorMessage: string } }\n>('auth/signUp', async (data, thunkApi) => {\n  const response = await api\n    .signUp(data)\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => {\n      return thunkApi.rejectWithValue({ errorMessage: 'Auth Error: Sign Up' })\n    })\n  return response\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(signInAsync.pending, (state) => {\n        state.loading.post.signIn = true\n      })\n      .addCase(signInAsync.fulfilled, (state, action) => {\n        state.loading.post.signIn = false\n        state.user = action.payload.user\n        setAccessToken({ accessToken: action.payload.accessToken })\n      })\n      .addCase(signInAsync.rejected, (state, action) => {\n        state.loading.post.signIn = false\n        console.log(action.payload?.errorMessage)\n      })\n      .addCase(signUpAsync.pending, (state) => {\n        state.loading.post.signUp = true\n      })\n      .addCase(signUpAsync.fulfilled, (state, action) => {\n        state.loading.post.signUp = false\n        state.user = action.payload.user\n        setAccessToken({ accessToken: action.payload.accessToken })\n      })\n      .addCase(signUpAsync.rejected, (state, action) => {\n        state.loading.post.signUp = false\n        console.log(action.payload?.errorMessage)\n      })\n  },\n})\n\nexport default authSlice.reducer\n","import Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport { SignInForm } from 'types/auth'\nimport { useAppDispatch } from 'app/hooks'\nimport { signInAsync } from 'features/auth/authSlice'\n\nconst theme = createTheme()\n\nexport const SignIn: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { register, handleSubmit } = useForm<SignInForm>()\n  const onSubmit: SubmitHandler<SignInForm> = (data) =>\n    dispatch(signInAsync({ data }))\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              label=\"email\"\n              fullWidth\n              autoComplete=\"email\"\n              autoFocus\n              {...register('email', {\n                required: true,\n              })}\n            />\n            <TextField\n              margin=\"normal\"\n              label=\"password\"\n              fullWidth\n              type=\"password\"\n              autoComplete=\"current-password\"\n              {...register('password', {\n                required: true,\n              })}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to=\"#\">Forgot password?</Link>\n              </Grid>\n              <Grid item>\n                <Link to=\"/sign-up/\">Don't have an account? Sign Up</Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","import Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport { SignUpForm } from 'types/auth'\nimport { useAppDispatch } from 'app/hooks'\nimport { signUpAsync } from 'features/auth/authSlice'\n\nconst theme = createTheme()\n\nexport const SignUp: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { register, handleSubmit } = useForm<SignUpForm>()\n  const onSubmit: SubmitHandler<SignUpForm> = (data) =>\n    dispatch(signUpAsync({ data }))\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"name\"\n                  autoComplete=\"name\"\n                  {...register('name', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"email\"\n                  autoComplete=\"email\"\n                  {...register('email', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  type=\"password\"\n                  label=\"password\"\n                  autoComplete=\"new-password\"\n                  {...register('password', { required: true })}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/\">Already have an account? Sign in</Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","import { createTheme, ThemeProvider } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport Box from '@mui/material/Box'\n\nexport const AppLayout: React.FC = (props) => {\n  const { children } = props\n\n  const mdTheme = createTheme()\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box height={'100%'} sx={{ display: 'flex' }}>\n        <CssBaseline />\n        {children}\n      </Box>\n    </ThemeProvider>\n  )\n}\n","import Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\n\nexport const MainLayout: React.FC = (props) => {\n  const { children } = props\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'light'\n            ? theme.palette.grey[100]\n            : theme.palette.grey[900],\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n      }}\n    >\n      <Toolbar />\n      {children}\n    </Box>\n  )\n}\n","import { styled } from '@mui/material/styles'\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Typography from '@mui/material/Typography'\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean\n  drawerWidth: number\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}))\n\ninterface HeaderBarProps {\n  open: boolean\n  toggle: () => void\n  drawerWidth: number\n  boardName?: string\n}\n\nexport const HeaderBar: React.FC<HeaderBarProps> = (props) => {\n  const { open, toggle, drawerWidth, boardName = '名称未設定' } = props\n\n  return (\n    <AppBar position=\"absolute\" open={open} drawerWidth={drawerWidth}>\n      <Toolbar\n        sx={{\n          pr: '24px', // keep right padding when drawer closed\n        }}\n      >\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={toggle}\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          sx={{ flexGrow: 1 }}\n        >\n          {boardName}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import { styled } from '@mui/material/styles'\nimport MuiDrawer, { DrawerProps as MuiDrawerProps } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\n\ninterface DrawerProps extends MuiDrawerProps {\n  drawerWidth: number\n}\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<DrawerProps>(({ theme, open, drawerWidth }) => ({\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: 'border-box',\n    ...(!open && {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}))\n\ninterface SideBarProps {\n  open: boolean\n  toggle: () => void\n  drawerWidth: number\n}\nexport const SideBar: React.FC<SideBarProps> = (props) => {\n  const { open, toggle, drawerWidth, children } = props\n\n  return (\n    <Drawer variant=\"permanent\" open={open} drawerWidth={drawerWidth}>\n      <Toolbar\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          px: [1],\n        }}\n      >\n        <IconButton onClick={toggle}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </Toolbar>\n      <Divider />\n      <List>{children}</List>\n      <Divider />\n    </Drawer>\n  )\n}\n","import { useState } from 'react'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport DashboardIcon from '@mui/icons-material/Dashboard'\nimport PeopleIcon from '@mui/icons-material/People'\nimport { AppLayout, MainLayout } from 'components/layout'\nimport { HeaderBar, SideBar } from 'components/bar'\n\nexport const Presenter: React.FC = (props) => {\n  const drawerWidth = 240\n  const [open, setOpen] = useState(false)\n  const toggle = () => setOpen(!open)\n\n  return (\n    <AppLayout>\n      <HeaderBar open={open} toggle={toggle} drawerWidth={drawerWidth} />\n      <SideBar open={open} toggle={toggle} drawerWidth={drawerWidth}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Members\" />\n        </ListItem>\n      </SideBar>\n      <MainLayout>hogehoge</MainLayout>\n    </AppLayout>\n  )\n}\n","import { Presenter } from './presenter'\n\nexport const Container: React.FC = () => {\n  return <Presenter />\n}\n","import { Route, Routes, BrowserRouter } from 'react-router-dom'\nimport { SignIn } from 'pages/signIn'\nimport { SignUp } from 'pages/signUp/SignUp'\nimport { Container as DashBoad } from 'pages/dsshBoad'\nimport { hasAccessToken } from './storage'\n\nexport const AppRouter: React.VFC = () => {\n  const hasToken = hasAccessToken()\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      {hasToken ? (\n        <Routes>\n          <Route path=\"/board/\" element={<DashBoad />} />\n        </Routes>\n      ) : (\n        <Routes>\n          <Route path=\"/\" element={<SignIn />} />\n          <Route path=\"/sign-up/\" element={<SignUp />} />\n        </Routes>\n      )}\n    </BrowserRouter>\n  )\n}\n","import { AppRouter } from 'router'\n\nfunction App() {\n  return <AppRouter />\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport authReducer from 'features/auth/authSlice'\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}